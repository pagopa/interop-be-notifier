include "persistence-jdbc"

akka {

  stdout-loglevel = "INFO"
  loglevel = "INFO"
  use-slf4j = on

  actor.provider = cluster

  remote.classic.netty.tcp.port = 0

  remote.artery {
    canonical.port = 0
    canonical.hostname = 127.0.0.1
  }

  coordinated-shutdown {
    terminate-actor-system = off
    run-by-actor-system-terminate = off
    run-by-jvm-shutdown-hook = off
  }

  cluster {
    jmx.multi-mbeans-in-same-jvm = on
    run-coordinated-shutdown-when-down = off
    sharding {
      number-of-shards = 5
    }
  }

  typed {
    stash-capacity = 200000
  }
}

notifier {
  url = "http://localhost:18088/notifier/"
  port = 18088

  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
  ec-keys-identifiers = "a_kid"
  rsa-keys-identifiers = "a_kid"

  signer-max-connections = 50

  port = 8088
  jwt {
    audience = "aud"
  }
  services {
    agreement-management = "http://localhost"
    purpose-management = "http://localhost"
    catalog-management = "http://localhost"
  }
  dynamo {
    notification-table-name = "a_table"
    notification-resources-table-name = "a_table"
  }

  queue {
    url = "queue_url"
    thread-pool-size = 1
  }
}

interop-commons {
  jwt {
    public-keys {
      urls = "https://interop.uat.selfcare.pagopa.it/.well-known/jwks.json"
    }
  }
}

futures-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor.fixed-pool-size-min = 4
}
